using System;
using UpdateControls;
using System.Collections.Generic;

namespace UpdateControls.Light.UnitTest
{
    public class Tournament
	{
        private List<Game> _games = new List<Game>();
		private Game _selectedGame;

		#region Independent properties
		// Generated by Update Controls --------------------------------
        private Independent _indGames = new Independent();
		private Independent _indSelectedGame = new Independent();

		public Game SelectedGame
		{
			get { _indSelectedGame.OnGet(); return _selectedGame; }
			set { _indSelectedGame.OnSet(); _selectedGame = value; }
		}

        public Game NewGame()
        {
            _indGames.OnSet();
            Game game = new Game();
            _games.Add(game);
            return game;
        }

        public void DeleteGame(Game game)
        {
            _indGames.OnSet();
            _games.Remove(game);
        }

        public IEnumerable<Game> Games
        {
            get { _indGames.OnGet(); return _games; }
        }
		// End generated code --------------------------------
		#endregion
	}
}
