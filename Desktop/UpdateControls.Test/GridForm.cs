/**********************************************************************
 * 
 * Update Controls .NET
 * Copyright 2008 Mallard Software Designs
 * Licensed under LGPL
 * 
 * http://updatecontrols.net
 * http://www.codeplex.com/updatecontrols/
 * 
 **********************************************************************/

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Windows.Forms;
using UpdateControls.Forms;
using UpdateControls;

namespace UpdateControls.Test
{
    public partial class GridForm : Form
    {
        private List<string> _numbers = new List<string>();

        #region Dynamic properties
        // Generated by Update Controls --------------------------------
        private Independent _dynNumbers = new Independent();

        public void DeleteNumber(string number)
        {
            _dynNumbers.OnSet();
            _numbers.Remove(number);
        }

        public IEnumerable<string> Numbers
        {
            get { _dynNumbers.OnGet(); return _numbers; }
        }
        // End generated code --------------------------------
        #endregion

        public GridForm()
        {
            InitializeComponent();
            _numbers.Add("One");
            _numbers.Add("Two");
            _numbers.Add("Three");
            _numbers.Add("Four");
        }

        private bool deleteButton_GetEnabled()
        {
            return numbersGrid.SelectedItems.Count > 0;
        }

        private System.Collections.IEnumerable numbersGrid_GetItems()
        {
            return Numbers;
        }

        private ColumnDefinitions numbersGrid_GetColumns()
        {
            return new ColumnDefinitions()
                .AddReadOnly("Number", typeof(string));
        }

        private object numbersGrid_GetCellValue(object tag, int column)
        {
            return tag;
        }

        private void deleteButton_Click(object sender, EventArgs e)
        {
            foreach (string number in numbersGrid.SelectedItems)
                DeleteNumber(number);
        }
    }
}